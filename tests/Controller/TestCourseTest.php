<?php

declare(strict_types=1);

namespace App\Tests\Controller;

/*use Symfony\Component\Panther\PantherTestCase;*/

use App\DataFixtures\AppFixtures;
use App\Entity\Course;
use App\Entity\Lesson;
use App\Tests\AbstractTest;
use Doctrine\Persistence\ObjectManager;

class TestCourseTest extends AbstractTest
{
    /*public function testSomething(): void
    {
        $client = static::createPantherClient();
        $crawler = $client->request('GET', '/');

        $this->assertSelectorTextContains('h1', 'Hello World');
    }*/
    protected function getFixtures(): array
    {
        return [AppFixtures::class];
        /*return parent::getFixtures(); */ // TODO: Change the autogenerated stub
    }

    public function testLinks(): void
    {

        $client = AbstractTest::getClient();
        $url = '/courses/';

        //проверка стартовой страницы
        $crawler = $client->request('GET', $url);
        $this->assertResponseOk();

        //Проверка перехода на страницу создания курса
        $link = $crawler->selectLink('Создать')->link();
        $crawler = $client->click($link);
        $this->assertResponseOk();

        //Проверка возвращения на главную страницу
        $link = $crawler->selectLink('Вернуться')->link();
        $crawler = $client->click($link);
        $this->assertResponseOk();

        //Проверка перехода на страницу курса
        $link = $crawler->selectLink('Открыть')->link();
        $crawler = $client->click($link);
        $this->assertResponseOk();

        //Переход на создание урока
        $link = $crawler->selectLink('Добавить урок')->link();
        $crawler = $client->click($link);
        $this->assertResponseOk();

        //Возвращение на страницу курса
        $link = $crawler->selectLink('Вернуться')->link();
        $crawler = $client->click($link);
        $this->assertResponseOk();

        //Переход на редактирование курса
        $link = $crawler->selectLink('Редактировать курс')->link();
        $crawler = $client->click($link);
        $this->assertResponseOk();

        //Возвращение на страницу курса
        $link = $crawler->selectLink('Вернуться')->link();
        $crawler = $client->click($link);
        $this->assertResponseOk();

        //Переход на редактирование урока
        $link = $crawler->selectLink('Редактировать')->link();
        $crawler = $client->click($link);
        $this->assertResponseOk();

        //Возвращение на страницу курса
        $link = $crawler->selectLink('Вернуться')->link();
        $crawler = $client->click($link);
        $this->assertResponseOk();

        //Переход на редактирование урока
        $link = $crawler->selectLink('Редактировать')->link();
        $crawler = $client->click($link);
        $this->assertResponseOk();

       /* //Сохранение изменений урока
        $form = $crawler->selectButton('Save')->form();
        $crawler = $client->submit($form);*/

        /*$link = $crawler->selectButton('Save')->link();
        //$link = $crawler->selectLink('Сохранить')->link();
        $crawler = $client->click($link);
        $this->assertResponseOk();*/
    }
    public function testForm(): void
    {
        /*$client = AbstractTest::getClient();
        $url = '/courses/1/edit';

        //проверка стартовой страницы
        $crawler = $client->request('POST', $url);
        $this->assertResponseOk();*/
        $client = AbstractTest::getClient();
        $url = '/courses/';
        $crawler = $client->request('GET', $url);
        $this->assertResponseOk();

        $link = $crawler->selectLink('Открыть')->link();
        $crawler = $client->click($link);
        $this->assertResponseOk();

        $link = $crawler->selectLink('Редактировать курс')->link();
        $crawler = $client->click($link);
        $this->assertResponseOk();

        $form = $crawler->selectButton('Save')->form();
        $crawler = $client->submit($form);
        $this->assertResponseRedirect();

        /* //Сохранение изменений урока
      $form = $crawler->selectButton('Save')->form();
      $crawler = $client->submit($form);*/

        /*$link = $crawler->selectButton('Save')->link();
        //$link = $crawler->selectLink('Сохранить')->link();
        $crawler = $client->click($link);
        $this->assertResponseOk();*/
    }
}
